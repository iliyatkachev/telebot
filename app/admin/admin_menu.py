import logging
from aiogram import Bot, Dispatcher, types, Router,F
from aiogram.types import InlineKeyboardMarkup, Message, InlineKeyboardButton, CallbackQuery
from config import bot_token
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command
from app.SQL.sql import add_channel, delete_all_channels
from app.click.keybort import (menu_button, admin_button, a_opportunities_button,
                               a_stat_button, a_channels_button,admin_menu_button)

logging.basicConfig(level=logging.INFO)
bot = Bot(token=bot_token)
dp = Dispatcher()
admin_router = Router()
form_channel = Router()



@admin_router.message(Command("admin_start"))
async def admin_start(message: types.Message):
    user = message.from_user.first_name
    reply_markup = types.InlineKeyboardMarkup(inline_keyboard=admin_button)
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç {user}, —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –∞–¥–º–∏–Ω.–ø–∞–Ω–µ–ª—å!", reply_markup=reply_markup)

@admin_router.callback_query(F.data == "a_menu")
async def a_menu(callback: types.CallbackQuery):
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –º–µ–Ω—é')
    await callback.message.delete()
    reply_markup = InlineKeyboardMarkup(inline_keyboard=menu_button)
    await callback.message.answer(text=f'–í—ã –ø–æ–ø–∞–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞,'
                                       f' –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µü´†', reply_markup=reply_markup)



@admin_router.callback_query(F.data == "a_opportunities")
async def a_opportunities(callback: types.CallbackQuery):
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏')
    await callback.message.delete()
    reply_markup = InlineKeyboardMarkup(inline_keyboard=a_opportunities_button)
    await callback.message.answer(text=f'–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω –ø–µ—Ä—Å–æ–Ω–∞–ª–¥–æ–º!', reply_markup=reply_markup)

@admin_router.callback_query(F.data == "a_stat")
async def a_stat(callback: types.CallbackQuery):
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    await callback.message.delete()
    reply_markup = InlineKeyboardMarkup(inline_keyboard=a_stat_button)
    await callback.message.answer(text=f'–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n'
                                       f'–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n'
                                       f'–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', reply_markup=reply_markup)


@admin_router.callback_query(F.data == "channels")
async def channels(callback: types.CallbackQuery):
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –∫–∞–Ω–∞–ª—ã')
    await callback.message.delete()
    reply_markup = InlineKeyboardMarkup(inline_keyboard=a_channels_button)
    await callback.message.answer(text=f'–í —ç—Ç–æ–º –º–µ–Ω—é, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å '
                                       f'–∫–∞–Ω–∞–ª, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω '
                                       f'–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', reply_markup=reply_markup)

class Form(StatesGroup):
    name = State()
    url = State()
    id_channel = State()
    full_channel = State()

@form_channel.callback_query(F.data == "a_c_add")
async def channels(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.name)
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –∫–∞–Ω–∞–ª—ã')
    await callback.message.delete()
    await callback.message.answer(text='–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞')


@form_channel.message(Form.name)
async def name_com(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Form.url)
    await message.answer(text='–û—Ç–ª–∏—á–Ω–æ!\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ URL –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')

@form_channel.message(Form.url)
async def url_com(message: Message, state: FSMContext):
    await state.update_data(url=message.text)
    await state.set_state(Form.id_channel)
    await message.answer(text='–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞')


@form_channel.message(Form.id_channel)
async def id_com(message: Message, state: FSMContext):
    await state.update_data(id_channel=message.text)
    await state.set_state(Form.full_channel)
    await message.answer(text='–ì–æ—Ç–æ–≤–æ!\n–¢–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –û–ö –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')

@form_channel.message(Form.full_channel)
async def full_channel(message: Message, state: FSMContext):
    if F.text.lower() == "–û–ö":
        data = await state.get_data()
        name = data.get('name', '')
        url = data.get('url', '')
        id_channel = data.get('id_channel', '')
        await add_channel(name=name, url=url, id_channel=id_channel)
        reply_markup = InlineKeyboardMarkup(inline_keyboard=admin_menu_button)
        await message.answer(text="–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=reply_markup)



@form_channel.callback_query(F.data == 'a_c_delete')
async def delete_channel(message: Message):
    await delete_all_channels(message)
    reply_markup = InlineKeyboardMarkup(inline_keyboard=admin_menu_button)
    await message.answer(text="–í—Å–µ –∫–∞–Ω–∞–ª—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã!", reply_markup=reply_markup)

