from aiogram import F, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from app.SQL.sql import add_channel, delete_all_channels, fetch_urls_and_ids
from app.admin.admin_menu import form_channel
from app.click.keybort import admin_menu_button


class Form(StatesGroup):
    name = State()
    url = State()
    id_channel = State()
    full_channel = State()


@form_channel.callback_query(F.data == "a_c_add")
async def channels(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.name)
    await callback.answer('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –∫–∞–Ω–∞–ª—ã')
    await callback.message.delete()
    await callback.message.answer(text='–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞')


@form_channel.message(Form.name)
async def name_com(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Form.url)
    await message.answer(text='–û—Ç–ª–∏—á–Ω–æ!\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ URL –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')


@form_channel.message(Form.url)
async def url_com(message: Message, state: FSMContext):
    await state.update_data(url=message.text)
    await state.set_state(Form.id_channel)
    await message.answer(text='–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞')


@form_channel.message(Form.id_channel)
async def id_com(message: Message, state: FSMContext):
    await state.update_data(id_channel=message.text)
    await state.set_state(Form.full_channel)
    await message.answer(text='–ì–æ—Ç–æ–≤–æ!\n–¢–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –û–ö –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')


@form_channel.message(Form.full_channel)
async def full_channel(message: Message, state: FSMContext):
    if F.text.lower() == "–û–ö":
        data = await state.get_data()
        name = data.get('name', '')
        url = data.get('url', '')
        id_channel = data.get('id_channel', '')
        await add_channel(name=name, url=url, id_channel=id_channel)
        reply_markup = InlineKeyboardMarkup(inline_keyboard=admin_menu_button)
        await message.answer(text="–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=reply_markup)


@form_channel.callback_query(F.data == 'a_c_delete')
async def delete_channel(message: Message):
    await delete_all_channels(message)
    reply_markup = InlineKeyboardMarkup(inline_keyboard=admin_menu_button)
    await message.answer(text="–í—Å–µ –∫–∞–Ω–∞–ª—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã!", reply_markup=reply_markup)


async def channels_add(callback: types.CallbackQuery):
    public_urls = fetch_urls_and_ids()

    if public_urls:
        keyboard_publics = [
                [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—à–∏—Å—åüëà", url=url)]
                for url in public_urls
            ]
        keyboard_publics.append([InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='check_me')])
        buttons = InlineKeyboardMarkup(inline_keyboard=keyboard_publics)
        await callback.message.answer('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≤—Å–µ –ø–∞–±–ª–∏–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.',
                                      reply_markup=buttons)
        await callback.message.delete()
    else:
        await callback.message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –µ—â—ë –Ω–µ—Ç –ø–∞–±–ª–∏–∫–æ–≤")


