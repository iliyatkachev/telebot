from urllib.parse import quote
from uuid import uuid4
from aiogram import types, Router, F
from aiogram.types import InlineKeyboardMarkup
from app.click.keybort import again
from app.click.keybort import menu_button
import aiohttp


get_command = Router()


@get_command.inline_query()
async def inline_films(inline_query: types.InlineQuery):
    base_url = "https://apivb.info/api/videos.json?title={}&token=30c9ab7fcdf48b3b3d2eda889b6637cd"
    search_query = quote(inline_query.query)

    url = base_url.format(search_query)

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            results = []
            if response.status == 200:
                response = await response.json(content_type=None)
            if isinstance(response, list):
                films = response[:50]
            elif isinstance(response, dict):
                films = response.get('data', [])[:50]
            else:
                films = []

            for film in films:
                title = film.get('title_ru') or film.get('title_en')
                description = f"{film.get('year', '–ì–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω')}"
                trailer_url = film.get('trailer', '').replace('\\/', '/')
                poster_url = film.get('poster', '').replace('\\/', '/')
                quality = film.get('quality', '')
                iframe_url = film.get('iframe_url', '').replace('\\/', '/')
                my_site_url = f"{iframe_url}"
                unique_id = str(uuid4())

                keyboard_buttons = [
                    [types.InlineKeyboardButton(text="ü§ó –ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", url=my_site_url)]
                ]

                if trailer_url:
                    keyboard_buttons.append([types.InlineKeyboardButton(text="üé¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–µ–π–ª–µ—Ä",
                                                                        url=trailer_url)])

                keyboard_buttons.append(
                    [types.InlineKeyboardButton(text='‚ôªÔ∏è –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫', switch_inline_query_current_chat=""),
                     types.InlineKeyboardButton(text="–º–µ–Ω—é‚Ü©Ô∏è", callback_data="g_menu")])

                keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

                result_text = types.InputTextMessageContent(
                    message_text=f"üìΩÔ∏è <b> –ù–∞–∑–≤–∞–Ω–∏–µ: {film.get('title_ru')}</b>\n({film.get('title_en')})\n\n"
                                 f"üï• <b>–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:</b> {description}\n\n"
                                 f"üì∑ <b>–ö–∞—á–µ—Å—Ç–≤–æ:</b> {quality}\n\n –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞! üçø"
                )

                results.append(types.InlineQueryResultArticle(
                    id=unique_id,
                    title=title,
                    input_message_content=result_text,
                    description=description,
                    thumbnail_url=poster_url,
                    reply_markup=keyboard,
                ))

            if not films:
                unique_id = str(uuid4())

                ag_but = InlineKeyboardMarkup(inline_keyboard=again)

                results.append(types.InlineQueryResultArticle(
                    id=unique_id,
                    title="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã ü´£",
                    input_message_content=types.InputTextMessageContent(message_text=
                                                                        f'<b>–í—ã –ø–æ–ø–∞–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</b>\n'
                                                                        f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–º –±—ã–ª–æ –ø—Ä–æ—â–µ –ø–æ–Ω—è—Ç—å –±–æ—Ç,'
                                                                        f'–≤–æ—Ç –ø—Ä–∏–º–µ—Ä –∫–∞–∫ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n'
                                                                        f'<b>–ü—Ä–∞–≤–∏–ª—å–Ω–æ:</b>\n‚úÖ –±–µ—Å—Å—Ç—ã–∂–∏–µ\n‚úÖ –î–æ–≤–æ–¥'
                                                                        f'\n‚úÖ –û–±–∏—Ç–µ–ª—å –∑–ª–∞\n‚úÖ –ó–í–ï–†–û–ü–û–õ–ò–°'
                                                                        f'\n\n<b>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ:</b>\n'
                                                                        f'‚ùå –±–µ—Å—Å—Ç—ã–∂–∏–µ 3 —Å–µ–∑–æ–Ω\n'
                                                                        f'‚ùå kp571335\n‚ùå https://www.kinopoisk.ru\n'
                                                                        f'‚ùå https://www.kinopoisk.ru/series\n\n'
                                                                        f'<i>–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ '
                                                                        f'–æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞</i>',),

                    description="–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ—á–µ–º—É",
                    reply_markup=ag_but
                    ))

            await inline_query.answer(results, cache_time=1, is_personal=True)


@get_command.callback_query(F.data == "g_menu")
async def get_menu(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    reply_markup = InlineKeyboardMarkup(inline_keyboard=menu_button)
    await callback.bot.send_message(chat_id=user_id,
                                    text=f'<b>–í—ã –ø–æ–ø–∞–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</b>\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–º –±—ã–ª–æ –ø—Ä–æ—â–µ –ø–æ–Ω—è—Ç—å –±–æ—Ç,'
                                         f'–≤–æ—Ç –ø—Ä–∏–º–µ—Ä –∫–∞–∫ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω–æ:</b>\n‚úÖ –±–µ—Å—Å—Ç—ã–∂–∏–µ\n‚úÖ –î–æ–≤–æ–¥'
                                         f'\n‚úÖ –û–±–∏—Ç–µ–ª—å –∑–ª–∞\n‚úÖ –ó–í–ï–†–û–ü–û–õ–ò–°'
                                         f'\n\n<b>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ:</b>\n'
                                         f'‚ùå –±–µ—Å—Å—Ç—ã–∂–∏–µ 3 —Å–µ–∑–æ–Ω\n‚ùå kp571335\n‚ùå https://www.kinopoisk.ru\n'
                                         f'‚ùå https://www.kinopoisk.ru/series\n\n'
                                         f'<i>–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞</i>',
                                    reply_markup=reply_markup)



